<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>task</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Slack Integration</name>
        <order>1000</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	var slackHelper = new x_12684_slack_app.SlackAppHelper();
	var channelExist = slackHelper.checkChannelExist(current);
	var conditionObj = slackHelper.getConditions(current);
	if(channelExist!=null){
		//evalutae condition to close channel
		if(conditionObj.close_channel){
			for(var i=0;i<conditionObj.close_channel.length;i++){
				if(GlideFilter.checkRecord(current,conditionObj.close_channel[i].condition) && channelExist.active){
					slackHelper.closeChannel(current,channelExist,conditionObj.close_channel[i].sysId);
				}
			}
			
		}
	}
	else if(conditionObj.create_channel){
		for(var j=0;j<conditionObj.create_channel.length;j++){
			if(GlideFilter.checkRecord(current,conditionObj.create_channel[j].condition)){
				slackHelper.createChannel(current,conditionObj.create_channel[j].sysId);
			}
		}
	}
	if(conditionObj.notify){
		for(var k=0;k<conditionObj.notify.length;k++){
			if(GlideFilter.checkRecord(current,conditionObj.notify[k].condition)){
				var users = slackHelper.getUsersList(current,conditionObj.notify[k].sysId);
				var message = slackHelper.generatePostMessage(current,conditionObj.notify[k].sysId);
				for(var z=0;z<users.length;z++)
					slackHelper.postMessage(message,'@'+users[z]);
			}
		}
	}
	gs.debug(slackHelper.logger.join());
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-06-08 20:21:05</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>133e52a4db133200378fd450cf9619d1</sys_id>
        <sys_mod_count>105</sys_mod_count>
        <sys_name>Slack Integration</sys_name>
        <sys_overrides/>
        <sys_package display_value="Slack App" source="x_12684_slack_app">3482f625db8d3200378fd450cf9619a0</sys_package>
        <sys_policy/>
        <sys_scope display_value="Slack App">3482f625db8d3200378fd450cf9619a0</sys_scope>
        <sys_update_name>sys_script_133e52a4db133200378fd450cf9619d1</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-12-20 08:29:56</sys_updated_on>
        <template/>
        <when>async</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=133e52a4db133200378fd450cf9619d1"/>
</record_update>
